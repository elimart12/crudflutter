Yo Elizabeth Marte con 20211604 Confirmo que domino el guardar y leer informaci√≥n desde alguna tecnolog√≠a m√≥vil y estoy dispuesto en cualquier momento a hacer un demo de como se hace eso.. . Si me solicitan hacer el demo en la clase, digo que no,  no puedo y he subido este archivo indicando que me lo se... por favor profesor qu√≠teme 10 puntos. 

IA utilizada: ChatGPT (OpenAI)

Prompt utilizado:
‚Äú¬øQu√© recomendaciones me das para almacenar informaci√≥n localmente en una aplicaci√≥n m√≥vil usando SQLite y realizar operaciones CRUD?‚Äù

Respuesta de la Inteligencia Artificial:

Para almacenar informaci√≥n localmente en una aplicaci√≥n m√≥vil usando SQLite, te recomiendo lo siguiente:

1. Usa un framework adecuado como Flutter con el paquete sqflite.
2. Define bien tus modelos de datos.
3. Crea un helper que gestione la base de datos y las operaciones CRUD.
4. Haz todas las operaciones en segundo plano usando async/await.
5. Valida los datos antes de insertarlos.
6. Aplica una arquitectura adecuada para separar responsabilidades.
IA utilizada: ChatGPT
Prompt usado:
"¬øC√≥mo puedo implementar una base de datos SQLite en Flutter para realizar operaciones CRUD? ¬øQu√© paquetes recomiendas y cu√°les son las mejores pr√°cticas?"

Respuesta de ChatGPT:
"Para implementar SQLite en Flutter, puedes usar el paquete sqflite, que es el m√°s popular para trabajar con bases de datos SQLite en aplicaciones m√≥viles. Aqu√≠ tienes un resumen de los pasos:

Agrega las dependencias en pubspec.yaml:

yaml
dependencies:
  sqflite: ^2.3.0
  path: ^2.1.0
Crea una clase para manejar la base de datos:

Define la estructura de la tabla.

Usa openDatabase para inicializar la DB.

Implementa m√©todos para insert, query, update y delete.

Ejemplo de operaciones CRUD:

Crear (Create):

dart
await db.insert('tabla', {'nombre': 'Ejemplo'});  
Leer (Read):

dart
List<Map> lista = await db.query('tabla');  
Actualizar (Update):

dart
await db.update('tabla', {'nombre': 'Nuevo'}, where: 'id = ?', whereArgs: [1]);  
Eliminar (Delete):

dart
await db.delete('tabla', where: 'id = ?', whereArgs: [1]);  
Mejores pr√°cticas:

Usa singleton para evitar m√∫ltiples instancias de la DB.

Maneja errores con try-catch.

Cierra la conexi√≥n cuando no se use.("*)



üì∫ Video recomendado:
https://www.youtube.com/watch?v=UpKrhZ0Hppk
*Flutter Tutorial - SQLite CRUD Operations with Sqflite Package*
